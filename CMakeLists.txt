cmake_minimum_required(VERSION 3.1.1)
project(gpstate)
set (CMAKE_CXX_STANDARD 11)

include_directories(include)
include_directories(SYSTEM /usr/local/include)
include_directories(SYSTEM /usr/include/eigen3/)
include_directories(SYSTEM /usr/include/)
#include_directories(/home/user/Downloads/celerite/cpp/include)
#include_directories(/Users/ajordan/work/celerite/cpp/include)
#include_directories(/home/ajordan/work/celerite/cpp/include)


if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()
set(CMAKE_CXX_FLAGS "-Wall -Wextra")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -pg")

#Can manually add the sources using the set command as follows:
set(SOURCE1 src/test_varf.cpp )
set(SOURCE11 src/seqMCfit_ndsho.cpp )
set(SOURCE12 src/seqMCfit_dsho.cpp )
set(SOURCE8 src/seqMCfit_m32.cpp)
set(SOURCE7 src/simulate_matern32.cpp)
set(SOURCE6 src/simulate_ndsho.cpp )
set(SOURCE2 src/rrlyr_dsho.cpp)
set(SOURCE3 src/gpstate_celerite_benchmark.cpp)
set(SOURCE4 src/gpstate_ndsho_benchmark.cpp)
set(SOURCE5 src/BFcet_dsho.cpp)
set(SOURCE20 src/simulate_sin.cpp)
set(SOURCE21 src/test_logl_dsho.cpp)
set(SOURCE22 src/test_logl_dsin.cpp)


#However, the file(GLOB...) allows for wildcard additions:
#file(GLOB SOURCES "src/*.cpp")

add_executable(test_varf ${SOURCE1})
add_executable(seqMCfit_ndsho ${SOURCE11})
add_executable(seqMCfit_dsho ${SOURCE12})
add_executable(seqMCfit_m32 ${SOURCE8})
add_executable(simulate_matern32 ${SOURCE7})
add_executable(simulate_ndsho ${SOURCE6})
add_executable(simulate_sin ${SOURCE20})
add_executable(rrlyr_dsho ${SOURCE2})
add_executable(benchmark ${SOURCE3})
add_executable(benchmark_ndsho ${SOURCE4})
add_executable(BFcet_dsho ${SOURCE5})
add_executable(test_logl_dsho ${SOURCE21})
add_executable(test_logl_dsin ${SOURCE22})

target_link_libraries (test_varf)
target_link_libraries (seqMCfit_ndsho)
target_link_libraries (seqMCfit_dsho)
target_link_libraries (seqMCfit_m32)
target_link_libraries (simulate_matern32)
target_link_libraries (simulate_ndsho)
target_link_libraries (simulate_sin)
target_link_libraries (rrlyr_dsho)
target_link_libraries (benchmark)
target_link_libraries (benchmark_ndsho)
target_link_libraries (BFcet_dsho)
target_link_libraries (test_logl_dsho)
target_link_libraries (test_logl_dsin)
